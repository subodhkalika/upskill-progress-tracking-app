generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  roadmaps     Roadmap[]
  resources    Resource[]
  tasks        Task[]
  progress     Progress?
  settings     Settings?
}

model Resource {
  id          String      @id @default(uuid())
  title       String
  url         String
  type        ResourceType
  completed   Boolean     @default(false)
  notes       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  roadmapId   String?
  roadmap     Roadmap?    @relation(fields: [roadmapId], references: [id])
  milestoneId String?
  milestone   Milestone?  @relation(fields: [milestoneId], references: [id])
  
  tasks       Task[]
}

model Roadmap {
  id          String    @id @default(uuid())
  title       String
  description String?
  isPublic    Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  resources   Resource[]
  milestones  Milestone[]
}

model Milestone {
  id          String    @id @default(uuid())
  title       String
  description String?
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  roadmapId   String
  roadmap     Roadmap     @relation(fields: [roadmapId], references: [id])
  tasks       Task[]
  resources   Resource[]
}

model Task {
  id          String    @id @default(uuid())
  title       String
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  resourceId  String?
  resource    Resource? @relation(fields: [resourceId], references: [id])
  milestoneId String?
  milestone   Milestone? @relation(fields: [milestoneId], references: [id])
}

model Progress {
  id        String   @id @default(uuid())
  streaks   Int      @default(0)
  points    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
}

model Settings {
  id                   String   @id @default(uuid())
  notificationsEnabled Boolean  @default(true)
  theme                String   @default("light")
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt

  userId               String   @unique
  user                 User     @relation(fields: [userId], references: [id])
}

enum ResourceType {
  VIDEO
  BOOK
  ARTICLE
  COURSE
  OTHER
}
